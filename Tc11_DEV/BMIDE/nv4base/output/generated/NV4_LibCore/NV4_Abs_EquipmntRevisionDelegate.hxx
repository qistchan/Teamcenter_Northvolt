//@<COPYRIGHT>@
//==================================================
//Copyright $2019.
//Siemens Product Lifecycle Management Software Inc.
//All Rights Reserved.
//==================================================
//@<COPYRIGHT>@

/*==================================================================================================
File description:
    This file contains the declaration for the Business Object, NV4_Abs_EquipmntRevisionDelegate
    Filename:   NV4_Abs_EquipmntRevisionDelegate.hxx
    Module:     NV4_LibCore
    @BMIDE autogenerated
==================================================================================================*/

#ifndef NV4BASE__NV4_ABS_EQUIPMNTREVISIONDELEGATE_HXX
#define NV4BASE__NV4_ABS_EQUIPMNTREVISIONDELEGATE_HXX

#include <NV4_LibCore/NV4_Abs_EquipmntRevision.hxx>

#include <NV4_LibCore/libnv4_libcore_exports.h>

namespace nv4base
{
    class NV4_Abs_EquipmntRevisionDelegate;
}
namespace nv4base
{
    class NV4_Abs_EquipmntRevisionImpl;
}
namespace nv4base
{
    class NV4_Abs_EquipmntRevision;
}
namespace nv4base
{
    class NV4_Abs_EquipmntRevisionGenImpl;
}

class  NV4_LIBCORE_API nv4base::NV4_Abs_EquipmntRevisionDelegate
{
public:
    //  Method to initialize this Class
    static int initializeClass();

    //  Method to get the NV4_Abs_EquipmntRevisionDelegate instance
    static NV4_Abs_EquipmntRevisionDelegate&  getInstance();

    //  Method to create the NV4_Abs_EquipmntRevisionImpl pointer
    static NV4_Abs_EquipmntRevisionImpl*  createImpl( NV4_Abs_EquipmntRevision&  ifObj );

    //  Method to delete the NV4_Abs_EquipmntRevisionImpl pointer
    static void deleteImpl( NV4_Abs_EquipmntRevisionImpl*  impl );


    ///
    /// finalize operation input
    /// @param pSavAsInput - desc
    /// @param vecDeepCopyData - desc
    /// @return - returns an int
    ///
    int  finalizeSaveAsInputBase(const NV4_Abs_EquipmntRevision &ifObj,  ::Teamcenter::SaveAsInput *pSavAsInput, std::vector<  ::Teamcenter::DeepCopyData* > *vecDeepCopyData );


protected:
    //  Pointer to the instance
    static NV4_Abs_EquipmntRevisionDelegate*  m_pInstance;

    NV4_Abs_EquipmntRevisionDelegate();
    virtual ~NV4_Abs_EquipmntRevisionDelegate();
    static void setInstance( NV4_Abs_EquipmntRevisionDelegate*  instance );


    ///
    /// finalize operation input
    /// @param pSavAsInput - desc
    /// @param vecDeepCopyData - desc
    /// @return - returns an int
    ///
    virtual  int  super_NV4_Abs_EquipmntRevision_finalizeSaveAsInputBase(NV4_Abs_EquipmntRevision &ifObj,  ::Teamcenter::SaveAsInput *pSavAsInput, std::vector<  ::Teamcenter::DeepCopyData* > *vecDeepCopyData ) = 0;


private:
    friend class nv4base::NV4_Abs_EquipmntRevisionGenImpl;

};

#include <NV4_LibCore/libnv4_libcore_undef.h>
#endif  //  NV4BASE__NV4_ABS_EQUIPMNTREVISIONDELEGATE_HXX
