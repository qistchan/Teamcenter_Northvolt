//@<COPYRIGHT>@
//==================================================
//Copyright $2019.
//Siemens Product Lifecycle Management Software Inc.
//All Rights Reserved.
//==================================================
//@<COPYRIGHT>@

/*==================================================================================================
File description:
    This file contains the declaration for the Business Object, NV4_Abs_EquipmntRevisionGenImpl
    Filename:   NV4_Abs_EquipmntRevisionGenImpl.hxx
    Module:     NV4_LibCore
    @BMIDE autogenerated
==================================================================================================*/

#ifndef NV4BASE__NV4_ABS_EQUIPMNTREVISIONGENIMPL_HXX
#define NV4BASE__NV4_ABS_EQUIPMNTREVISIONGENIMPL_HXX

#include <NV4_LibCore/NV4_Abs_EquipmntRevision.hxx>
#include <metaframework/RootObjectImpl.hxx>
#include <unidefs.h>

#include <extensionframework/PropOperationDispatcher.hxx>

#include <cxpom/attributeaccessor.hxx>
#include <NV4_LibCore/libnv4_libcore_exports.h>

namespace nv4base
{
    class NV4_Abs_EquipmntRevisionGenImpl;
}
namespace nv4base
{
    class NV4_Abs_EquipmntRevision;
}
namespace nv4base
{
    class NV4_Abs_EquipmntRevisionDelegate;
}

class  NV4_LIBCORE_API  nv4base::NV4_Abs_EquipmntRevisionGenImpl : public ::Teamcenter::RootObjectImpl
{
public:
    //  Accessor for the Interface Object
    nv4base::NV4_Abs_EquipmntRevision*  getNV4_Abs_EquipmntRevision() const;

    

    tag_t  getNv4_SupplierEquipmentUIDTag()  const;
    tag_t  getNv4_SupplierNameTag()  const;
    tag_t  getNv4_ContactDetailsTag()  const;
    tag_t  getNv4_ManufacturingYearTag()  const;
    tag_t  getNv4_CommissioningDateTag()  const;
    tag_t  getNv4_WarrantyStartTag()  const;
    tag_t  getNv4_WarrantyEndTag()  const;
    tag_t  getNv4_OverallLenghtTag()  const;
    tag_t  getNv4_OverallWidthTag()  const;
    tag_t  getNv4_OverallHeightTag()  const;
    tag_t  getNv4_OverallDiamaterTag()  const;
    tag_t  getNv4_OverallWeightTag()  const;
    tag_t  getNv4_PeakPowerTag()  const;
    tag_t  getNv4_VoltageRequiredTag()  const;
    tag_t  getNv4_CurrentRequiredTag()  const;
    tag_t  getNv4_FreqencyTag()  const;
    tag_t  getNv4_ChargingDurationTag()  const;
    tag_t  getNv4_PhaseTag()  const;
    tag_t  getNv4_UPSTag()  const;
    tag_t  getNv4_AvailabilityTag()  const;
    tag_t  getNv4_PerformanceTag()  const;
    tag_t  getNv4_YieldTag()  const;
    tag_t  getNv4_MaintenanceFrequencyTag()  const;
    tag_t  getNv4_EquipmentComplianceStdTag()  const;
    tag_t  getNv4_MaintenanceManualTag()  const;
    tag_t  getNv4_SparePartListTag()  const;
    tag_t  getNv4_MaxMechanicalSpeedTag()  const;
    tag_t  getNv4_NominalThroughputTag()  const;
    tag_t  getNv4_DateofDesRevAgreementTag()  const;
    tag_t  getNv4_DateOfCommisioningFactTag()  const;
    tag_t  getNv4_DateOfCommisioningSiteTag()  const;
    tag_t  getNv4_MaxPowerConsumptionTag()  const;
    tag_t  getNv4_AvgPowerConsumptionTag()  const;
    tag_t  getNv4_timebwfailureTag()  const;
    tag_t  getNv4_timetorepairTag()  const;



    ///
    /// finalize operation input
    /// @param pSavAsInput - desc
    /// @param vecDeepCopyData - desc
    /// @return - returns an int
    ///
    int  super_finalizeSaveAsInputBase( ::Teamcenter::SaveAsInput *pSavAsInput, std::vector<  ::Teamcenter::DeepCopyData* > *vecDeepCopyData );

    //  OperationDispatcher SubClass declarations



protected:
    //  Constructor for a NV4_Abs_EquipmntRevision Object
    explicit NV4_Abs_EquipmntRevisionGenImpl( nv4base::NV4_Abs_EquipmntRevision&  busObj );
    virtual ~NV4_Abs_EquipmntRevisionGenImpl();

    //  Method to initialize this Class
    static int initializeClass();

    //  Method to create a new Instance
    static ::Teamcenter::RootObjectImpl*  newInstance();

private:
    //  Private default constructor. We do not want this class instantiated without the business object passed in.
    NV4_Abs_EquipmntRevisionGenImpl();

    //  Pointer to the Interface Object
    nv4base::NV4_Abs_EquipmntRevision*  m_busObj;

    //  Constructor for a NV4_Abs_EquipmntRevisionGenImpl Object
    NV4_Abs_EquipmntRevisionGenImpl( const NV4_Abs_EquipmntRevisionGenImpl& );

    //  Copy Constructor
    NV4_Abs_EquipmntRevisionGenImpl& operator=( const NV4_Abs_EquipmntRevisionGenImpl& );

    friend class  nv4base::NV4_Abs_EquipmntRevisionDelegate;
};



#include <NV4_LibCore/libnv4_libcore_undef.h>
#endif  //  NV4BASE__NV4_ABS_EQUIPMNTREVISIONGENIMPL_HXX
