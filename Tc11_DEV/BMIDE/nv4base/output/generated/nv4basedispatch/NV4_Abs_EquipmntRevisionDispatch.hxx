//@<COPYRIGHT>@
//==================================================
//Copyright $2019.
//Siemens Product Lifecycle Management Software Inc.
//All Rights Reserved.
//==================================================
//@<COPYRIGHT>@

/*==================================================================================================
File description:
    This file contains the declaration for the Business Object, NV4_Abs_EquipmntRevisionDispatch
    Filename:   NV4_Abs_EquipmntRevisionDispatch.hxx
    Module:     nv4basedispatch
    @BMIDE autogenerated
==================================================================================================*/

#ifndef NV4BASE__NV4_ABS_EQUIPMNTREVISIONDISPATCH_HXX
#define NV4BASE__NV4_ABS_EQUIPMNTREVISIONDISPATCH_HXX

#include <vector>
#include <NV4_LibCore/NV4_Abs_EquipmntRevision.hxx>
#include <NV4_LibCore/NV4_Abs_EquipmntRevisionDelegate.hxx>
#include <foundationdispatch/ItemRevisionDispatch.hxx>
#include <nv4basedispatch/initializenv4base.hxx>

#include <extensionframework/PropOperationDispatcher.hxx>

#include <nv4basedispatch/libnv4basedispatch_exports.h>

namespace nv4base
{
    class NV4_Abs_EquipmntRevisionDispatch;
}
namespace nv4base
{
    class NV4_Abs_EquipmntRevisionDelegate;
}
namespace Teamcenter
{
    class BusinessObjectImpl;
}

class  NV4BASEDISPATCH_API  nv4base::NV4_Abs_EquipmntRevisionDispatch
         : public  nv4base::NV4_Abs_EquipmntRevisionDelegate
{
public:
    //  Method to initialize this Class
    static int initializeClass();

    //  Method to get the NV4_Abs_EquipmntRevisionDispatch instance
    static NV4_Abs_EquipmntRevisionDispatch&  getInstance();


    //  OperationDispatcher SubClass declarations


protected:

    ///
    /// finalize operation input
    /// @param pSavAsInput - desc
    /// @param vecDeepCopyData - desc
    /// @return - returns an int
    ///
    int  super_NV4_Abs_EquipmntRevision_finalizeSaveAsInputBase(NV4_Abs_EquipmntRevision &ifObj,  ::Teamcenter::SaveAsInput *pSavAsInput, std::vector<  ::Teamcenter::DeepCopyData* > *vecDeepCopyData );


private:
    //  Pointer to the dispatch instance
    static NV4_Abs_EquipmntRevisionDispatch*  m_dispatch;

    //  Default constructor
    NV4_Abs_EquipmntRevisionDispatch();

    //  Default Destructor
    virtual ~NV4_Abs_EquipmntRevisionDispatch();

    //  Constructor Method
    static ::Teamcenter::RootObject*  constructor();

    //  Constructor for a NV4_Abs_EquipmntRevisionDispatch
    NV4_Abs_EquipmntRevisionDispatch( const NV4_Abs_EquipmntRevisionDispatch& );

    //  Copy constructor
    NV4_Abs_EquipmntRevisionDispatch& operator = (const NV4_Abs_EquipmntRevisionDispatch&);

    //friend
    friend void ::nv4base::initializenv4baseInternal();
    friend void ::nv4base::initializenv4baseExtenders();
    friend class nv4base::NV4_Abs_EquipmntRevisionDelegate;
};

#include <nv4basedispatch/libnv4basedispatch_undef.h>
#endif  //  NV4BASE__NV4_ABS_EQUIPMNTREVISIONDISPATCH_HXX
